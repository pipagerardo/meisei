----------------------------------------------------------------------------
[1] INSTALL MSYS2 COMPILERS
===============================

https://www.msys2.org/
Download the installer: msys2-x86_64-20240113.exe (Or the latest)

Install to C:\msys64
I insist that you install MSYS2 in C:\msys64
Did I tell you that you should install MSYS2 in "C:\msys64"?
If you install MSYS2 in another path, then don't come crying to me that it doesn't work.

Start MSYS2.EXE

MSYS MiniTutorial:
==================

Update repository:
------------------
pacman -Syu

Restart environment:
--------------------
pacman -Su

Consult Packages [packages]:
---------------------------
pacman -Ss [package-name]
pacman -Ss msys
pacman -Ss mingw64
pacman -Ss ucrt64
pacman -Ss mingw32
pacman -Ss clang64
pacman -Ss clang32

Install Packages [packages]:
-----------------------------
pacman -S [package-name]

Delete Packages [packages]:
---------------------------
pacman -Rsc [package-name]

INSTALLING COMPILERS:
=====================
I only install the compilers: MINGW64 UCRT and MINGW32.
You can also install: MINGW64, CLANG64 and CLAN32 but I am not using them.

pacman -Syu 		// Update repository
pacman -Su 		// Restart environment
pacman -S make 		// Install make

[Required Compilers]

MINGW64 UCRT: The Universal C Runtime (UCRT) (Windows 10, 11 y Xbox)
	mingw-w64-ucrt-x86_64
	pacman -S mingw-w64-ucrt-x86_64-gcc
	pacman -S mingw-w64-ucrt-x86_64-gdb
	pacman -S mingw-w64-ucrt-x86_64-make
	pacman -S mingw-w64-ucrt-x86_64-windows-default-manifest	# Only if "default-manifest.o" is missing when compiling

MINGW32: To compile for 32-bit Windows (on 64-bit Windows). ( Windows 7, 8, 10 y 11 on 32 bits ) 
	mingw-w64-i686
	pacman -S mingw-w64-i686-gcc
	pacman -S mingw-w64-i686-gdb
	pacman -S mingw-w64-i686-make
	pacman -S mingw-w64-i686-windows-default-manifest		# Only if "default-manifest.o" is missing when compiling

[Optional Compilers]

MINGW64: It uses the older MSVCRT runtime ( Windows 7, 8, 10 y 11 )
	mingw-w64-x86_64
	pacman -S mingw-w64-x86_64-gcc
	pacman -S mingw-w64-x86_64-gdb
	pacman -S mingw-w64-x86_64-make
	pacman -S mingw-w64-x86_64-windows-default-manifest		# Only if "default-manifest.o" is missing when compiling

CLANG64: It uses the older MSVCRT runtime ( Windows 7, 8, 10 y 11 )
	mingw-w64-x86_64-clang
	mingw-w64-x86_64-clang-tools-extra
	mingw-w64-x86_64-clang-compiler-rt

CLANG32: To compile for 32-bit Windows (on 64-bit Windows). ( Windows 7, 8, 10 y 11 on 32 bits ) 
	mingw-w64-i686-clang
	mingw-w64-i686-clang-tools-extra
	mingw-w64-i686-clang-compiler-rt

----------------------------------------------------------------------------
[2] COMPILE LIKE THIS CRAZY WITH BAT FILES
===========================================

0 - INSTALL PROGRAMMING ENVIRONMENT.txt 	# This informative document in English.
0 - INSTALAR ENTORNO PROGRAMACION.txt		# This informative document in EspaÃ±ol.

1 - meisei_esp_ucrt64bits.bat			# Compile Meisie Spanish, 64 bits MINGW GCC UCRT
2 - meisei_eng_ucrt64bits.bat			# Compile Meisie English, 64 bits MINGW GCC UCRT

3 - kailleraclient_esp_ucrt64.bat		# Compile kailleraclient Spanish, 64 bits MINGW GCC UCRT
4 - kailleraclient_eng_ucrt64.bat		# Compile kailleraclient English, 64 bits MINGW GCC UCRT

5 - meisei_esp_gcc32bits.bat			# Compile Meisie Spanish, 32 bits MINGW GCC
6 - meisei_eng_gcc32bits.bat			# Compile Meisie English,  32 bits MINGW GCC

7 - kailleraclient_esp_gcc32.bat		# Compile kailleraclient Spanish, 32 bits MINGW GCC
8 - kailleraclient_eng_gcc32.bat		# Compile kailleraclient English, 32 bits MINGW GCC

9 - limpia-clean.bat				# Delete all files created when compiling, except executables.

RESULTS:
	.\bin\Meisei_esp.exe
	.\bin\Meisei_eng.exe
	.\bin\kaillera\kailleraclient_esp.dll
	.\bin\kaillera\kailleraclient_eng.dll
	.\bin\Meisei32_esp.exe
	.\bin\Meisei32_eng.exe
	.\bin\kaillera\kailleraclient32_esp.dll
	.\bin\kaillera\kailleraclient32_eng.dll

----------------------------------------------------------------------------
[3] INSTALL IDE CODE::BLOCKS
=============================
Download Code::Blocks version "codeblocks-20.03-nosetup.zip" 
https://www.codeblocks.org/downloads/binaries/

Install on "C:\msys64\codeblocks"

Configure Compilers in Code::Blocks
-----------------------------------

Code::Blocks -> Settings -> Compiler

Global compiler settings 

Selected Compiler: [ Copy | Rename | Delete ]
------------------
	- GNU GCC Compiler UCRT 64 bits
	- GNU GCC Compiler 32 bits
	- GNU GCC Compiler 64 bits
	- LLVM Clang Compiler 64 bits
	- LLVM Clang Compiler 32 bits
	...

[Tab] Toolchain executables:
--------------------------------
Compiler's Directory UCRT       64 bits:	C:\msys64\ucrt64\bin	
Compiler's Directory MINGW GCC  32 bits:	C:\msys64\mingw32\bin
Compiler's Directory MINGW GCC  64 bits: 	C:\msys64\mingw64\bin
Compiler's Directory CLANG VLLM 64 bits: 	C:\msys64\clang64\bin
Compiler's Directory CLANG VLLM 32 bits:	C:\msys64\clang32\bin

[Tab] Program Files:		MINGW GCC / UCRT	CLANG VLLM
------------------------	-----------------	-----------------
C compiler:			gcc.exe			clang.exe
C++ compiler:			g++.exe			clang++.exe
Linker for dinamic libs:	g++.exe			clang++.exe
Linker for static libs:		ar.exe			llvm-ar.exe
Debugger:			Default			Default
Resurce compiler:		windres.exe		windres.exe
Make program:			mingw32-make.exe	mingw32-make.exe

Configure Settings Code::Blocks
-------------------------------

Code::Blocks -> Settings -> Editor
Encode settings / Use encoding when opening files: UTF-8

Open projects CBP:
--------------------
File -> Open -> Proyecto.cbp

If when you open a project CBP you have configured the compilers incorrectly, 
it will tell you. 
Read again the part about "Configure the Compilers in Code::Blocks"

With Code::Blocks you can modify the Meisei code, if you just want
To compile it you can use the BAT files to compile without using Code::Blocks.

----------------------------------------------------------------------------
[4] PROGRAMING
==============
Hey friend! I can't help you much here anymore.
You must know how to program in C, Windows Winapi, DirectX, etc...
...
...
...


----------------------------------------------------------------------------
[5] IMPORTANT CONSIDERATIONS:
==================================

Meisei is an MSX1 emulator, it does not emulate MSX2, MSX2+, or pickled milk.
Support MSX2? To this day I highly doubt that I am qualified for that
task due to lack of knowledge. When you upload the source code to Github
We'll see if someone is encouraged and gives me a hand...

It is programmed in C using Winapi, DirectDraw and Direct
to compile it on platforms other than Windows 8, 10 and 11.
Adapt it to other platforms using SDL2, I'm not saying it's not possible, but
It is outside my limited time of life on this planet.

Meisei was originally in English, it has been translated into Spanish and does not
I plan to support no other language. If you want to translate it into Elvish
Dark One of Mordor... then grab the source code and get to it, Champion!

I intend to support TSX format cassette tapes, but
this is not implemented yet.

You can write to me at: pipagerardo@gmail.com

-----------------------------------------------------------------------------

For Windows 64 bits
---------------------
-march=x86-64

For Windows 32 bits
--------------------
-march=i686 
-mfpmath=387

-std=c17
-static
-fomit-frame-pointer
-ftracer
-O3
-s

-mwindows		// Windows GUI App
-mconsole		// Console Windows [Optional]
-lgdi32
-lkernel32
-lole32
-lcomdlg32
-lcomctl32
-lshell32
-lwinmm
-lwininet		// NET [Optional]
-luser32
-ld3d9
-lddraw
-ldsound
-ldinput
-ldxguid
-luuid
-lz

#DEFINES:
---------

MEISEI_ESP		Activate the language in Spanish

MEISEI_32BITS		32 bits

MEISEI_UPDATE		Activate program update (does not work)

DEBUG_PROFILER		???

-----------------------------------------------------------------------------
"meisei_autorun.zip" with a rom or dsk already starts and runs it. 
If it's a case it doesn't work.

You can enter a game through the command line:
Meisei_eng.exe games\rom\MJTT.zip

-----------------------------------------------------------------------------

FILE PATHS CHANGED:
===================

"netplay.c"
	"kaillera/kailleraclient_esp.dll"
	"kaillera/kailleraclient_eng.dll"
	"kaillera/kailleraclient32_esp.dll"
	"kaillera/kailleraclient32_eng.dll"

"mapper.c"
	"bios/default_bios.zip"
	"bios/dsk2rom.zip"

"help.c"
	"docs/meisei_esp.txt"
	"docs/meisei_eng.txt"

-----------------------------------------------------------------------------

ANNOYING WARNINGS:
------------------

// Warning -Wformat-overvlow

// Warning -Wimplicit-fallthrough

-----------------------------------------------------------------------------